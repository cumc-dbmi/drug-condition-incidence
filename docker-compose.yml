version: '3'

# LINK REFERENCES
# https://dev.to/kanzitelli/deploying-postgresql-and-redis-behind-traefik-in-the-cloud-5an2

services:

  traefik:
    image: traefik:latest
    container_name: howoften-proxy
    read_only: true
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.postgres.address=:5432" # PostgreSQL endpoint
    labels:
      - traefik.enable=true
    ports:
      - ${HOWOFTEN_HOST}:80:80
      - 8080:8080
      - ${HOWOFTEN_HOST}:5432:5432
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postgres:
    container_name: ${DOCKER_PREFIX}-database
    environment:
      POSTGRES_DB: ${DATASOURCE_DATABASE}
      POSTGRES_USERNAME: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
    image: postgres
    shm_size: 1024MB
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.${DOCKER_PREFIX}-database.entrypoints=postgres
      - traefik.tcp.routers.${DOCKER_PREFIX}-database.rule=HostSNI(`*`)
      - traefik.tcp.routers.${DOCKER_PREFIX}-database.service=${DOCKER_PREFIX}-service
      - traefik.tcp.services.${DOCKER_PREFIX}-service.loadbalancer.server.port=5432
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./database/liquibase/changelog/test:/test
      - ./database/init-scripts/extract-test-files.sh:/docker-entrypoint-initdb.d/extract-test-files.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && sleep 5"]
      interval: 20s
      timeout: 25s
      retries: 5

  liquibase:
    container_name: ${DOCKER_PREFIX}-dbscm
    image: liquibase/liquibase
    volumes:
      - ./database/liquibase/changelog:/liquibase/changelog
    command: liquibase --url="jdbc:postgresql://postgres:${DATASOURCE_PORT}/${DATASOURCE_DATABASE}" --contexts="${ENV}" --searchPath=/liquibase/changelog --changeLogFile=./changelog.xml --username=${DATASOURCE_USERNAME} --password=${DATASOURCE_PASSWORD} update
    depends_on:
      postgres:
        condition: service_healthy

  howoften-backend:
    container_name: ${DOCKER_PREFIX}-backend
    image: cumc-dbmi/howoften-backend:latest
    build: ./backend
    environment:
      - DATASOURCE_DRIVER
      - DATASOURCE_USERNAME
      - DATASOURCE_PASSWORD
      - DATASOURCE_HOSTNAME
      - DATASOURCE_PORT
      - DATASOURCE_SCHEMA
      - DATASOURCE_DATABASE
    labels:
      - traefik.enable=true
      - traefik.http.routers.${DOCKER_PREFIX}-howoften-backend.rule=Host(`${HOWOFTEN_HOST}`) && (PathPrefix(`/api/incidence/v2`) || PathPrefix(`/ops/incidence/v2`))
      - traefik.http.routers.${DOCKER_PREFIX}-howoften-backend.entrypoints=web
      - traefik.http.services.${DOCKER_PREFIX}-backend-service.loadbalancer.server.port=5001
    depends_on:
      liquibase:
        condition: service_started
    volumes:
      - type: bind
        source: /var/tmp
        target: /var/tmp


  howoften-frontend:
    container_name: howoften-frontend
    image: cumc-dbmi/howoften-frontend:latest
    build: ./frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.${DOCKER_PREFIX}-frontend.rule=Host(`${HOWOFTEN_HOST}`) && PathPrefix(`/`)
      - traefik.http.routers.${DOCKER_PREFIX}-frontend.entrypoints=web
    depends_on:
      howoften-backend:
        condition: service_started


  # howoften-backend-legacy:
  #     container_name: ${DOCKER_PREFIX}-backend
  #     image: cumc-dbmi/howoften-backend:latest
  #     build: ./incidence-api
  #     restart: unless-stopped
  #     ipc: none
  #     read_only: true
  #     privileged: false
  #     environment:
  #       - DATASOURCE_DRIVER
  #       - DATASOURCE_USERNAME
  #       - DATASOURCE_PASSWORD
  #       - DATASOURCE_HOSTNAME
  #       - DATASOURCE_PORT
  #       - DATASOURCE_SCHEMA
  #       - DATASOURCE_DATABASE
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.howoften-backend.rule=Host(`${HOWOFTEN_HOST}`) && PathPrefix(`/incidence-api`)"
  #       - "traefik.http.routers.howoften-backend.entrypoints=web"
  #       - "traefik.http.services.howoften-backend.loadbalancer.server.port=5000"
  #     depends_on: 
  #       - liquibase
  #     volumes:
  #       - type: bind
  #         source: /var/tmp
  #         target: /var/tmp           

  #   howoften-frontend-legacy:
  #   container_name: howoften-frontend
  #   image: cumc-dbmi/howoften-frontend:latest
  #   build: ./client
  #   restart: unless-stopped
  #   ipc: none
  #   privileged: false
  #  depends_on:
  #    - howoften-backend-legacy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.howoften-frontend.rule=Host(`${HOWOFTEN_HOST}`) && PathPrefix(`/`)"
  #     - "traefik.http.routers.howoften-frontend.entrypoints=web"